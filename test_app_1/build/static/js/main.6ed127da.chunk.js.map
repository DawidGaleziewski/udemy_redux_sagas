{"version":3,"sources":["actions/users.js","components/UsersList.js","components/NewUser.js","components/App.js","reportWebVitals.js","reducers/users.js","reducers/index.js","api/users.js","sagas/users.js","sagas/index.js","index.js"],"names":["Types","getUserSuccess","items","type","payload","UsersList","users","console","log","ListGroup","sort","a","b","firstName","lastName","flastName","map","user","ListGroupItem","style","display","flexGrow","margin","Button","outline","color","id","NewUser","state","handleFirstNameChange","e","setState","target","value","handleLastNameChange","handleSubmit","preventDefault","props","onSubmit","Form","this","FormGroup","Label","Input","required","placeholder","onChange","block","Component","App","createUserRequest","getUsersRequest","padding","maxWidth","connect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","combineReducers","action","getUsers","axios","get","params","limit","createUser","post","watchGetUsersRequest","watchCreateUserRequest","call","api","result","put","actions","data","takeEvery","takeLatest","usersSagas","fork","rootSaga","all","UsersSagas","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","defaults","withCredentials","baseURL","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ed127da.chunk.js","sourcesContent":["export const Types = {\r\n    GET_USERS_REQUEST: 'users/get_users_request',\r\n    GET_USER_SUCCESS: 'users/get_user_success',\r\n    CREATE_USER_REQUEST: 'users/create_user_request'\r\n}\r\n\r\n// Actions\r\nexport const getUsersRequest = () => ({\r\n    type: Types.GET_USERS_REQUEST,\r\n})\r\n\r\n// Action we will be calling when we fetch the data. Items will be passed from API\r\nexport const getUserSuccess = ({items}) => ({\r\n    type: Types.GET_USER_SUCCESS,\r\n    payload: {\r\n        items\r\n    }\r\n})\r\n\r\nexport const createUserRequest = ({firstName, lastName}) => ({\r\n    type: Types.CREATE_USER_REQUEST,\r\n    payload:{\r\n        firstName,\r\n        lastName\r\n    }\r\n})","import React from 'react';\r\nimport {ListGroup, ListGroupItem, Button} from 'reactstrap';\r\n\r\nconst UsersList = ({users}) => {\r\n    console.log('users is ', users)\r\n    return <ListGroup>\r\n        {users.sort((a,b) => {\r\n            if(a.firstName > b.firstName){\r\n                return 1;\r\n            } else if(a.firstName < b.firstName){\r\n                return -1\r\n            } else if(a.lastName > b.flastName){\r\n                return 1\r\n            } else if(a.lastName < b.flastName){\r\n                return -1\r\n            } else {\r\n                return 0\r\n            }\r\n        }).map((user) => <ListGroupItem key={user.id}>\r\n            <section style={{display: 'flex'}}>\r\n                <div style={{flexGrow:1, margin: 'auto 0'}}>\r\n                        {user.firstName} {user.lastName}\r\n                </div>\r\n                <div>\r\n                    <Button outline color=\"danger\">\r\n                        Delete\r\n                    </Button>\r\n                </div>\r\n            </section>\r\n        </ListGroupItem>)}\r\n    </ListGroup>\r\n}\r\n\r\nexport default UsersList","import React, {Component} from 'react';\r\nimport {Form, FormGroup, Label, Input, Button} from 'reactstrap'\r\n\r\nclass NewUser extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleFirstNameChange = e => {\r\n        this.setState({\r\n            firstName: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLastNameChange = e => {\r\n        this.setState({\r\n            lastName: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit({\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName\r\n        })\r\n        this.setState({\r\n            firstName: '',\r\n            lastName: ''\r\n        })\r\n    }\r\n    render(){\r\n        return <Form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n                <Label>\r\n                    First name\r\n                </Label>\r\n                <Input required placeholder=\"First Name\" onChange={this.handleFirstNameChange} value={this.state.firstName}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>\r\n                    Last name\r\n                </Label>\r\n                <Input required placeholder=\"Last Name\" onChange={this.handleLastNameChange} value={this.state.lastName}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Button block outline type=\"submit\" color=\"primary\">\r\n                    Create\r\n                </Button>\r\n            </FormGroup>\r\n        </Form>\r\n    }\r\n}\r\n\r\nexport default NewUser","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\nimport {getUsersRequest, createUserRequest} from '../actions/users';\nimport UsersList from './UsersList';\nimport NewUser from './NewUser';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    // Fire the request. Because saga is watching for this to run it will also get fired\n    this.props.getUsersRequest()\n  }\n\n  handleSubmit = ({firstName, lastName}) => {\n    this.props.createUserRequest({firstName, lastName})\n  }\n\n  render(){\n    const users = this.props.users\n    return (\n\n      <div style={{margin: '0 auto', padding: '20px', maxWidth: '600px'}}>\n        <NewUser onSubmit={this.handleSubmit} />\n        <UsersList users={users.items} />\n      </div>\n    )\n  }\n}\n\n\nexport default connect(({users}) => ({users}), {\n  getUsersRequest,\n  createUserRequest\n})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Types} from '../actions/users';\r\n\r\nconst INITIAL_STATE = {\r\n    items: []\r\n}\r\n\r\nexport default function users(state = INITIAL_STATE, action){\r\n    switch(action.type){\r\n        case Types.GET_USER_SUCCESS:{\r\n            return {\r\n                items: action.payload.items\r\n            }\r\n        }\r\n        default : {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import {combineReducers} from 'redux';\r\n\r\nimport UsersReducer from './users';\r\n\r\nexport default combineReducers({\r\n    users: UsersReducer\r\n})","import axios from 'axios';\r\nexport const getUsers = () => {\r\n    return axios.get('/users', {\r\n        params: {\r\n            limit: 1000\r\n        }\r\n    })\r\n}\r\n\r\nexport const createUser = ({firstName, lastName}) => {\r\n    return axios.post('/users', {\r\n       firstName,\r\n       lastName\r\n    })\r\n}","import {takeEvery, takeLatest, call, fork, put} from 'redux-saga/effects';\r\n// We want the types and the actions\r\nimport * as actions from '../actions/users';\r\n\r\nimport * as api from '../api/users';\r\n\r\n// get users is refered to as a worker saga\r\nfunction* getUsers(){\r\n    try{\r\n        const result = yield call(api.getUsers);\r\n        // Rest of the code will run after this call has resulted\r\n        console.log(result)\r\n        yield put(actions.getUserSuccess({items: result.data.data}))\r\n    } catch(e){\r\n        \r\n    }\r\n}\r\n\r\n// Action will be pased from the action to the worker saga\r\nfunction* createUser(action){\r\n    console.log('honk action', action)\r\n    try {\r\n        // if we want to pass arguments to this function we need to pass it as separate arguments\r\n        yield call(api.createUser, {firstName: action.payload.firstName, lastName: action.payload.lastName});\r\n        // We can call a saga inside a saga\r\n        yield call(getUsers);\r\n    }catch(e){\r\n        console.log('error')\r\n    }\r\n\r\n}\r\n\r\n// Watcher for users\r\nfunction* watchGetUsersRequest(){\r\n    yield takeEvery(actions.Types.GET_USERS_REQUEST, getUsers);\r\n}\r\n\r\nfunction* watchCreateUserRequest(){\r\n    yield takeLatest(actions.Types.CREATE_USER_REQUEST, createUser)\r\n}\r\n\r\nconst usersSagas = [\r\n    fork(watchGetUsersRequest),\r\n    fork(watchCreateUserRequest)\r\n]\r\n\r\nexport default usersSagas;\r\n","import UsersSagas from './users';\r\nimport {all} from 'redux-saga/effects';\r\n\r\nexport default function* rootSaga(){\r\n    yield all([...UsersSagas])\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios';\nimport reducers from './reducers';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\n\n\n\n// Configure axios basic default settings\naxios.defaults.withCredentials = true;\naxios.defaults.baseURL = 'http://rem-rest-api.herokuapp.com/api/'\n\nsagaMiddleware.run(rootSaga);\n// IN case of issues use this settings\n// //axios.defaults.withCredentials = true;\n// axios.defaults.baseURL = 'https://cors-anywhere.herokuapp.com/https://rem.dbwebb.se/api';\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}